buildscript {
    repositories {
        mavenLocal()
        maven { url = "http://repo.grails.org/grails/core" }
    }

    dependencies {
        classpath "org.grails:grails-docs:3.2.4.BUILD-SNAPSHOT"
    }
}

import groovy.json.*

apply plugin:'base'

task prepareResources() << {
    ant.mkdir(dir:buildDir)
    ant.get(src:"https://github.com/grails/grails-guides/archive/master.zip", dest:"${buildDir}/resources.zip")    
    ant.unzip(src:"${buildDir}/resources.zip", dest:"${buildDir}/resources")
}

task publishGuide(type: grails.doc.gradle.PublishGuide, dependsOn:prepareResources) {
    def localResourcesDir = "${buildDir}/resources/grails-guides-master"
    // def localResourcesDir = "../grails-guides/"
    // No language setting because we want the English guide to be
    // generated with a 'en' in the path, but the source is in 'en'
    // so that it's easy to track with git.
    targetDir = project.file("${buildDir}/docs")
    sourceRepo = "https://github.com/${githubSlug}/edit/$githubBranch/src/main/docs"
    sourceDir = new File(projectDir, "src/main/docs")
    propertiesFiles = [ new File(projectDir, "gradle.properties"), new File(projectDir, "complete/gradle.properties") ]
    asciidoc = true
    resourcesDir = project.file("${localResourcesDir}/src/main/resources")
    properties = [   
        'safe':'UNSAFE',
        'commondir':project.file("${localResourcesDir}/src/main/docs"),
        'sourceDir':project.file('complete').absolutePath,     
        'javaee': 'https://docs.oracle.com/javaee/7/api/',
        'javase': 'https://docs.oracle.com/javase/7/docs/api/',
        'groovyapi': 'http://docs.groovy-lang.org/latest/html/gapi/',
        'grailsapi': 'http://docs.grails.org/latest/api/',
        'gormapi': 'http://gorm.grails.org/latest/api/',         
        'springapi': 'https://docs.spring.io/spring/docs/current/javadoc-api/'
    ]
}

publishGuide.doLast {
    ant.move(file:"${project.buildDir}/docs/guide/single.html",
             tofile:"${project.buildDir}/docs/guide/index.html", overwrite:true)
    new File(project.buildDir, "docs/index.html").text = '''
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/html4/loose.dtd">

<html lang="en">
<head>
<meta http-equiv="refresh" content="0; url=guide/index.html" />
</head>

</body>
</html>
    '''
}

task updateGuidesJson() << {
    def jsonSlurper = new JsonSlurper()
    def f = new File("gh-pages/guides.json")
    def json = []
    if(f.exists()) {
        json = f.withReader {
            jsonSlurper.parse(it)
        }
    }

    def existing = json.find { it.title == project.title }
    def data = [:]
    if(existing) {
        data = existing
    }
    else {
        json.add(data)
    }
    data.putAll(
        name: project.name,
        title: project.title,
        subtitle: project.subtitle,
        authors:project.authors,
        githubSlug:project.githubSlug
    )

    if(project.hasProperty('tags')) {
        data.put("tags", project.tags.split(','))
    }

    f.text = JsonOutput.toJson(json)
}

task copyLocalGuideImgResources(type: Copy) {
    from ('src/main/resources/img') {
        include '*.png'
        include '*.gif'
        include '*.jpg'
        include '*.jpeg'
    }
    into "${buildDir}/resources/grails-guides-master/src/main/resources/img"
}
publishGuide.dependsOn copyLocalGuideImgResources
copyLocalGuideImgResources.mustRunAfter prepareResources
